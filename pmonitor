#!/bin/bash
pmonitor_file=/tmp/.pmonitor.me

#define fun
function monitor(){
while true
do
    while read line
    do
        comment=""
        count=0
        for token in $line
        do
            if [ $count == 0 ];then
                pid=$token
                count=$count+1
                continue
            fi
            if [ $count == 1 ];then
                commend=$token
                continue
            fi
            commend="$commend $token"
        done

        c_pid=`ps -ax | awk '{ print $1  }' | grep -e "^${pid}$"`
        if test -z "$c_pid";then
           continue
        fi
        
        echo "$commend"
        eval "$commend"
        new_pid=$!
        sed -i "s/${pid}/${new_pid}/g" $pmonitor_file
        sleep 1
    done < $pmonitor_file
    sleep 20
done
}

function runp(){

    run_commend=$1

    cat $pmonitor_file | grep "${run_commend}"
    exist=$?
    if [ $exist -eq 0 ];then
        line=`cat $pmonitor_file | grep "${run_commend}"`
        for token in $line
        do
            pid=$token
            break
        done
        echo $pid

        ps -ax | awk '{ print $1  }' | grep -e "^${pid}$"
        c_pid=$?
        if [ $c_pid -eq 0 ];then
            echo "error:this program exist!!!"
            echo "      only one process allow per program"
            exit
        fi
        sed -i "/{$pid}/d" $pmonitor_file
    fi

    echo "running $run_commend"
    eval $run_commend
    pid=$!
    echo "$pid $run_commend" >> $pmonitor_file
}

if [ $# -lt 1 ];then
    echo "Usage:"
    echo "      nohup_run.sh < program start commend >"
fi

if [ ! -f $pmonitor_file ];then
    is_first_time=1
    touch $pmonitor_file
fi

if [ "$1" == "pmonitor" ];then
    monitor
else
    run_commend="nohup"
    for param in $*
    do 
        run_commend="$run_commend $param"
    done
    run_commend="$run_commend &"
    runp "$run_commend"

    if [ "$is_first_time" == "1" ];then
        nohup pmonitor pmonitor &
    fi
fi
